import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class MathUtil {
    public static long factorial(int n) {
        if (n < 0) throw new IllegalArgumentException("Negative input not allowed");
        long result = 1;
        for (int i = 2; i <= n; i++) result *= i;
        return result;
    }
}

public class Q1FactorialTest {

    @Test
    void testValidFactorials() {
        assertEquals(120, MathUtil.factorial(5));
        assertEquals(1, MathUtil.factorial(0));
        assertEquals(1, MathUtil.factorial(1));
        assertEquals(3628800, MathUtil.factorial(10));
    }

    @Test
    void testNegativeInputThrowsException() {
        assertThrows(IllegalArgumentException.class, () -> MathUtil.factorial(-5));
    }
}

/*
Expected Output:
Test run: Passed
- testValidFactorials() will check factorials for 0, 1, 5, 10
- testNegativeInputThrowsException() will pass if exception is thrown for -5
*/
